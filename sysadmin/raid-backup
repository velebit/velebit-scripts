#!/bin/sh

fail () {
    if [ "$#" -eq 0 ]; then set -- "Something has gone very wrong!"; fi
    echo "$*" >&2
    exit 1
}

status () {
    echo "-- [`date +'%Y-%m-%d %H:%M:%S'`] -- $*"
}

backup=/backup
full_backup="home scratch"
tar_backup="root boot"

dryrun=

while [ "$#" -gt 0 ]; do
    case "$1" in
       -n)  dryrun=yes ;;
       -*)  fail "Unknown flag '$1'" ;;
        *)  fail "Unexpected argument '$1'" ;;
    esac
    shift
done

[ -n "`mount | awk '($3 == "'"$backup"'")'`" ] \
    || fail "$backup isn't mounted!"

Run () {
    if [ -n "$dryrun" ]; then echo "WOULD run:      $*" >&2; else "$@"; fi
}
TimeRun () {
    if [ -n "$dryrun" ]; then echo "WOULD run: time $*" >&2; else time "$@"; fi
}

TestBad () {
    if [ -n "$dryrun" ]; then false;  else test "$@";  fi
}
TestGood () {
    if [ -n "$dryrun" ]; then true;   else test "$@";  fi
}

run_backup () {
    local src="$1"
    local dst="$2"

    if [ -e "$dst.old" -a -e "$dst" ]; then
	Run rm -rf "$dst.old" || fail "couldn't remove $dst.old"
	TestBad -e "$dst.old" && fail "didn't actually remove $dst.old"
    fi
    if [ -e "$dst" ]; then
	Run mv "$dst" "$dst.old" || fail "couldn't move old $dst"
    fi

    status "Backing up $src to $dst..."
    case "$dst" in
	*.tar.gz)
	    TimeRun tar -C "$src" --one-file-system -czf "$dst" . \
		|| fail "The tarballing went kaboom."
	    ;;
	*)
	    Run mkdir -p "$dst" || fail "couldn't create new directory $dst"
	    (TimeRun tar -C "$src" --one-file-system -cf - . \
		| Run tar -C "$dst" -xpf -) || fail "The copying went kaboom."
	    ;;
    esac
    status "...done."
    Run rm -rf "$dst.old"
}

run_all_backups () {
    for i in $full_backup; do
	if [ "$i" = "root" ]; then run_backup "/"   "$backup/$i";
	else                       run_backup "/$i" "$backup/$i"; fi
    done

    for i in $tar_backup; do
	if [ "$i" = "root" ]; then run_backup "/"   "$backup/$i.tar.gz";
	else                       run_backup "/$i" "$backup/$i.tar.gz"; fi
    done
}

if [ -t 1 ]; then
    # Only create a log file if the output is being sent to a terminal,
    # and if this isn't a dry run.
    log="$backup/log.`date +'%Y-%m-%d'`.txt"
    if [ -e "$log" ]; then
	log="$backup/log.`date +'%Y-%m-%d.%H-%M'`.txt"
	if [ -e "$log" ]; then
	    for x in a b c d e f g h i j k l m n o p q r s t u v w x y z; do
		log="$backup/log.`date +'%Y-%m-%d.%H-%M'`.$x.txt"
		if [ ! -e "$log" ]; then break; fi
	    done
	fi
    fi
    if [ -z "$dryrun" ]; then
	status "Will write log to $log"
	run_all_backups 2>&1 | tee "$log"
    else
	status "Would write log to $log"
	run_all_backups
    fi
else
    run_all_backups
fi
