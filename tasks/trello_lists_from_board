#!/home/bert/.local/lib/python/venv/tasks/bin/python3
# List all lists (name and ID) for the specified board.
import argparse
import sys
import trello
from bert_trello import get_board, create_auth_token, read_auth_data


def print_lists(board_key, settings):
    try:
        board = get_board(board_key, board_key, verbosity=settings.verbose)
    except trello.exceptions.Unauthorized:
        board = get_board(board_key, board_key, verbosity=settings.verbose,
                          auth=create_auth_token(read_auth_data()))
    for tlist in board.list_lists():
        if not tlist.closed or settings.print_archived:
            fields = []
            if settings.verbose > 0:
                fields.append(tlist.id)
            fields.append(tlist.name)
            print("{:3s} {}".format(('#' if tlist.closed else ' '),
                                    ", ".join([repr(f) for f in fields])))
            if settings.verbose >= 2:
                import unicodedata
                nfc_name = unicodedata.normalize('NFC', tlist.name)
                if tlist.name != nfc_name:
                    print("      Note: name is different from its NFC form "
                          f"{nfc_name!r}")
        if settings.delete_archived and tlist.closed:
            name = tlist.name
            tlist.delete()  # No longer available?!
            print(f"(T) List '{name}' deleted.", file=sys.stderr)


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-v', '--verbose', action='count', default=0)
    parser.add_argument('-a', '--print-archived', action='store_true')
    parser.add_argument('-d', '--delete-archived', action='store_true')
    parser.add_argument('board')
    settings = parser.parse_args()
    return settings


def main():
    settings = parse_args()
    print_lists(settings.board, settings)


if __name__ == "__main__":
    main()
