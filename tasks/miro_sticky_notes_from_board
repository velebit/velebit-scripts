#!/home/bert/.local/lib/python/venv/tasks/bin/python3
# List all frames (text label and ID) for the specified board.
import argparse
import sys
from bert_miro import get_board


def print_sticky_notes(board_key, verbosity=0, print_note_id=False,
                       print_frame=True, print_frame_id=False):
    board = get_board(board_key, board_key, verbosity=verbosity)
    note_list = []

    for frame in board.frames():
        frame_name = frame.text
        frame_id = frame.id

        for note in frame.sticky_notes():
            note_name = note.text
            note_id = note.id
            if len([n for n in note_list if n['id'] == note_id]) > 0:
                if verbosity >= 1:
                    print(f"Note {note_name!r} ({note_id!r}) appears in"
                          " multiple frames, ignoring {frame_name!r}",
                          file=sys.stderr)
            else:
                note_list.append({'id':  note_id,
                                  'name': note_name,
                                  'frame_id':  frame_id,
                                  'frame_name': frame_name})

    for note in board.sticky_notes():
        note_name = note.text
        note_id = note.id
        if len([n for n in note_list if n['id'] == note_id]) == 0:
            note_list.append({'id':  note_id,
                              'name': note_name,
                              'frame_id':  None,
                              'frame_name': None})

    for note_info in note_list:
        to_print = []
        if print_note_id:
            to_print.append(note_info['id'])
        to_print.append(note_info['name'])
        if print_frame_id:
            to_print.append(note_info['frame_id'])
        if print_frame:
            to_print.append(note_info['frame_name'])
        print("    " + ", ".join([repr(p) for p in to_print]))


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-v', '--verbose', action='count', default=0)
    parser.add_argument('-i', '--id', action='store_true')
    parser.add_argument('board')
    settings = parser.parse_args()
    return settings


def main():
    settings = parse_args()
    print_sticky_notes(settings.board, verbosity=settings.verbose,
                       print_note_id=settings.id, print_frame_id=settings.id)


if __name__ == "__main__":
    main()
