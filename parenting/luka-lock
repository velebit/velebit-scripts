#!/bin/bash

source "$(dirname "$(realpath "$0")")"/ll-functions.bash

case "$1" in
    --child)    shift ;;
    *)          exec sudo "$0" --child "$@" ; exit 1 ;;
esac

user=luka

while [ "$#" -gt 0 ]; do
    case "$1" in
        -n)     run=(echo '>'); shift ;;
        -q)     log=(true); shift ;;
        -u)     user="$2"; shift; shift ;;
        -*)     echo "Unknown flag '$1'!" >&2; exit 1 ;;
        *)      echo "Unknown argument '$1'!" >&2; exit 1 ;;
    esac
done

lock_account "$user"

down_down_down=

# lock the session
session_found=
for s in $(get_user_sessions "$user"); do
    session_found=yes
    case "$s" in
        lxqt-session)
#            if [ -z "$(screenlockers)" ]; then
                "${log[@]}" "Trying to lock the screen..." >&2
                lock_log="/tmp/lock_log.$$"
                if ! run_as_user "$user" \
                         xscreensaver-command -lock > "$lock_log" 2>&1; then
#                         lxqt-leave --lockscreen > "$lock_log" 2>&1; then
                    sed -e 's/^/  /' "$lock_log"
                    case "$(cat "$lock_log")" in
                        *": already locked"*)
                            "${log[@]}" "...$(warn)was already locked$(end)." \
                                        >&2
                            ;;
                        *)
                            "${log[@]}" "...$(failed), will try rebooting!." \
                                        >&2
                            down_down_down=yes
                            ;;
                    esac
                else
                    "${log[@]}" "...$(is_done)." >&2
                fi
                rm -f "$lock_log"
#            else
#                "${log[@]}" "Screen locker $(good)is already running$(end)." >&2
#            fi
            ;;
        *)
            "${log[@]}" "$(warn)Unknown session '$s', locking skipped.$(end)" >&2
            ;;
    esac
done
if [ -z "$session_found" ]; then
    "${log[@]}" "$(warn)$(user2name "$user") does not seem to be logged in.$(end)" >&2
fi

# lock binaries for ALL users
lock_dir /opt/minecraft-launcher
lock_executable_file /usr/bin/minecraft-launcher
lock_executable_file /bin/minecraft-launcher
lock_dir /opt/multimc
lock_flatpak_graphics io.mrarm.mcpelauncher
lock_flatpak_graphics com.valvesoftware.Steam
lock_flatpak_graphics com.discordapp.Discord

kill_flatpak_user_app "$user" io.mrarm.mcpelauncher
kill_flatpak_user_app "$user" com.valvesoftware.Steam
kill_flatpak_user_app "$user" com.discordapp.Discord

clear_relock_queue

"${log[@]}" "(Note: Minecraft and other apps, if any, were not killed.)" >&2

if [ -n "$down_down_down" ]; then
    "${log[@]}" "Starting shutdown in 30s..." >&2
    if ! shutdown -h 'now + 30 seconds'; then
        "${log[@]}" "...$(failed) to schedule a shutdown!" >&2
    else
        "${log[@]}" "...$(is_done)." >&2
    fi
fi
