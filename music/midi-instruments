#!/usr/bin/perl
# Print some extremely basic info about a MIDI file.
#
use warnings;
use strict;
use MIDI;
use Getopt::Long;

### usage stuff

sub Usage ( @ ) {
  print STDERR join "\n\n", @_, <<EndOfUsage;
Usage:
  $0 infiles...
EndOfUsage
  exit 1;
}

#use vars qw( @SPEED @OUTPUT );
#GetOptions('speed|s=s'       => \@SPEED,
#	   'output|o|to|t=s' => \@OUTPUT,
#          ) or Usage;

@ARGV
  or  Usage "Error: you must specify at least one input file.";
#@OUTPUT and (@ARGV != 1 or @OUTPUT != 1)
#  and Usage "Error: you can't use --to with more than one file.";
#@OUTPUT and @SPEED != 1
#  and Usage "Error: you must specify -s exactly once when using --to.";

#@SPEED = map split(/,/), @SPEED;
#@SPEED = qw( 50 66.667 80 90 ) unless @SPEED;

### code to perform the MIDI speed modification

sub show_track_info ( $ ) {
  my ($in) = @_;

  my $opus = MIDI::Opus->new({from_file => $in}) or die;

  my @tracks = $opus->tracks;
  for my $t (0..$#tracks) {
    #print "\n";
    for my $e ($tracks[$t]->events) {
      $e->[0] eq 'patch_change' or next;
      printf "%2d,%2d: %s\n", $t+0, $e->[2]+0, $MIDI::number2patch{$e->[3]};
    }
  }
}

### do it!

for my $input (@ARGV) {
  print "\n--- $input ---\n";
  show_track_info($input);
}
print "\n";
